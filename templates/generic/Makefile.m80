# $m80path = [{command => "embedperl.pl" , exec =>  }] 
# this file was programtically generated by m80, edit it at your own risk.
#
# m80 was Built for CYGWIN_NT-5.1 by Administrator on bweinrau01, Sat Jan  8 16:28:13 MST 2005
# 
# Edits MAY be lost if this file is regenerated.
#
# The following line(s) is for internal use and should not be changed:
# CLISP (setq COMMAND "newModule"
# CLISP       ARGS '( "-m" "generic" "-t" "generic")
# CLISP       [0.07.00] 0.07.00)
#

M80LIB=$(shell m80 --libpath)

# The following loads local make rules.  Use this local file
# for rules, as editing this file could cause your rules to be overwritten.

localHeadRules=$(wildcard localHead.mk)
ifneq ($(localHeadRules),)
include localHead.mk
endif

include $(M80LIB)/make/m80loadenv.mk
include $(M80LIB)/make/local.mk
include $(M80LIB)/make/m80generic.mk
include $(M80LIB)/make/repositoryRules.mk

<:
$suffixes=$ENV{SUFFIXES};

if ($suffixes) {
    @suffixes=split /,/, $suffixes;
    foreach $suffix (@suffixes) 
    {
:>
.SUFFIXES	:	.<:= $suffix :>

%.<:= $suffix :> : %.<:= $suffix :>.m80
		runPath.pl $(DEBUGFLAG) -file $< 
<:   
    } 
} else {
:>

#
# No suffix rules defined.  If you find your .m80 files will not convert,
# try and use the -S flag to "m80 --newModule" to specify the suffix of the
# file.  An a good example is files with a ".sh" suffix, they require the 
# module be built:
#
#
# m80 --newModule -m {moduleName} -t {moduleType}-S "sh" 
#
# You can alternately use the SUFFIXES environment variable also.
#


<:
}
:>

#
# The following loads local make rules.  Use this local file
# for rules, as editing this file could cause your rules to be overwritten.
#

localTailRules=$(wildcard localTail.mk)
ifneq ($(localTailRules),)
include localTail.mk
endif
